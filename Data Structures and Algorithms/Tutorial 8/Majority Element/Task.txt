Majority Element
In this challenge you are given a vector of ints of size 
𝑛
n.  You are guaranteed that some element of the vector appears more than 
𝑛
/
2
n/2 times.  The goal is to return this majority element.  The function has the following signature

int majorityElement(const std::vector& vec);
Let's look at some examples

If vec = {1} then the output should be 1.

If vec = {3, 2, 3} then the output should be 3.

If vec = {0, 1, 0, 1, 1} then the output should be 1.

If vec = {7, 8, 7, -10, 7, 2, 7, 9, 7, 7} then the output should be 7.

The vector {1, 3, 2, 2} would not be a valid input as no element appears more than 2 times.  We will not test your function on such inputs.  Your program can output an arbitrary value in this case.

Try to find a solution that takes time 
𝑂
(
𝑛
)
O(n) "on average".  

Bonus: if you solve this easily, can you find a solution with worst-case running time 
𝑂
(
𝑛
)
O(n)?
